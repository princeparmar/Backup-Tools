package google

import (
	"encoding/json"
	"fmt"
	"testing"

	"google.golang.org/api/gmail/v1"
)

func Test_createRawMessage(t *testing.T) {

	var message gmail.Message

	data := `{"historyId":"16721633","id":"194920f75e50523d","internalDate":"1737617269000","labelIds":["UNREAD","CATEGORY_UPDATES","INBOX"],"payload":{"body":{},"headers":[{"name":"Delivered-To","value":"prince.soamedia@gmail.com"},{"name":"Received","value":"by 2002:a0c:f60c:0:b0:6d8:f6eb:2d2a with SMTP id r12csp879086qvm;        Wed, 22 Jan 2025 23:27:54 -0800 (PST)"},{"name":"X-Google-Smtp-Source","value":"AGHT+IFtUgEMkM+MhweVt9FraDfJSj0waTqJsBIvAEw3RDJpfqfudoQXmQtpzbCAKsHTjItVMKxO"},{"name":"X-Received","value":"by 2002:a05:6902:3188:b0:e49:8248:37fa with SMTP id 3f1490d57ef6-e582584c528mr1468297276.14.1737617274368;        Wed, 22 Jan 2025 23:27:54 -0800 (PST)"},{"name":"ARC-Seal","value":"i=1; a=rsa-sha256; t=1737617274; cv=none;        d=google.com; s=arc-20240605;        b=TdTd2BPtQ7qY8sAzGf5RAtNnlBTJ0SgeaVWrCXCmbc+11vFnxVxtvhkyB9CqAcx52S         LkdMPB3tZ2V+K249f0EfVIhWJBfvoZLYs3b9U96jMAcoN2VfmVLPkM8wBSnYSGwb0/md         hyQEPH3TvSWf5RiJgwkIUtvTfahxg55caXIMK6Ch5UjYkkT/wFBSpqf9c/3xs0G4G1N+         xJbW204hgMG/0ujSgrD+DiJir5Jz8FvM3rYj1EWNWpE3OblhweOFJ0POSE8+f8Kp9Q64         XEdZwqMI7YWugSQgDXg6SymuHcr2hyNfucew07lA0Kpe/hUcJPlI/YrDvOH2SjFc9gT+         JT1Q=="},{"name":"ARC-Message-Signature","value":"i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20240605;        h=mime-version:list-unsubscribe-post:list-unsubscribe:list-id         :feedback-id:message-id:date:to:reply-to:from:subject:dkim-signature         :dkim-signature;        bh=0xCQNhtumIKsdG1wYyTuu2aY1U6Rj4OgrX0KfM5SIw8=;        fh=PsOFlpclzLYlu/zG2uSyI+NRcv44/Yin/Gw+Nhu/rcs=;        b=Sp3au/e8p19QFGzTJrll/zBhiBGDi/+4zoxZ+7ZeBnM1NjPmAfA7yGXlt+VpPoSICI         efLt49+M+XHwuMF9JQXFvqYwIGNFTEg5uMqdunB5fdzYHfsEWsjdie0Wp7/JPMsd3pHt         kxW64guvwUxr6ejqWfBtzYMJ8e07Qsq5PgNfpCR/kGOcALlEyGngaJ6r70lt820rCgSC         9MqxtKaVueYsB8TIQGzgV51mThcLp5mIhCmAX1TPb2ayRlUQFRYQCrfY9rrqzdfL16Ow         JzorccJBq/pCpoHN7S/QKQW+coPJU7revMUj50/H++dPsrrdVt2bgOrdOzep1v+1Iiy+         VQWw==;        dara=google.com"},{"name":"ARC-Authentication-Results","value":"i=1; mx.google.com;       dkim=pass header.i=@gmail.mcsv.net header.s=k2 header.b=YrxhjCnq;       dkim=pass header.i=@cjp.org.in header.s=k3 header.b=\"qf/sn4g/\";       spf=pass (google.com: domain of bounce-mc.us12_91547409.8291684-d47fb8a352@mail7.suw231.rsgsv.net designates 198.2.174.7 as permitted sender) smtp.mailfrom=bounce-mc.us12_91547409.8291684-d47fb8a352@mail7.suw231.rsgsv.net"},{"name":"Return-Path","value":"<bounce-mc.us12_91547409.8291684-d47fb8a352@mail7.suw231.rsgsv.net>"},{"name":"Received","value":"from mail7.suw231.rsgsv.net (mail7.suw231.rsgsv.net. [198.2.174.7])        by mx.google.com with ESMTPS id 3f1490d57ef6-e57cf1a503dsi7667475276.496.2025.01.22.23.27.54        for <prince.soamedia@gmail.com>        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);        Wed, 22 Jan 2025 23:27:54 -0800 (PST)"},{"name":"Received-SPF","value":"pass (google.com: domain of bounce-mc.us12_91547409.8291684-d47fb8a352@mail7.suw231.rsgsv.net designates 198.2.174.7 as permitted sender) client-ip=198.2.174.7;"},{"name":"Authentication-Results","value":"mx.google.com;       dkim=pass header.i=@gmail.mcsv.net header.s=k2 header.b=YrxhjCnq;       dkim=pass header.i=@cjp.org.in header.s=k3 header.b=\"qf/sn4g/\";       spf=pass (google.com: domain of bounce-mc.us12_91547409.8291684-d47fb8a352@mail7.suw231.rsgsv.net designates 198.2.174.7 as permitted sender) smtp.mailfrom=bounce-mc.us12_91547409.8291684-d47fb8a352@mail7.suw231.rsgsv.net"},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.mcsv.net; s=k2; t=1737617274; x=1737703674; bh=0xCQNhtumIKsdG1wYyTuu2aY1U6Rj4OgrX0KfM5SIw8=; h=Subject:From:Reply-To:To:Date:Message-ID:X-MC-User:Feedback-ID:\t List-ID:List-Unsubscribe:List-Unsubscribe-Post:Content-Type:\t MIME-Version:CC:Date:Subject:From; b=YrxhjCnqJ6osWJtsf8p+RZXOSjjeHB8yFZNMVU6XXrMjhQmUoO5XjYaNOLXTXKIpG\t D99/K++G0q0KwpcIoo4zIJYU9ydx14GJI9TP/IDxVhh7qIKBO+MSd8bJ50SjlPLnw3\t VSxrP7xW147EnMuyBjBVUgxrzOV14kVi/jBntqGmEpLDW6/JAoegOil0dkZmCMKneR\t EBDjJMrM4YGNLhjD8/nQ4IrIGnrgY5xWJVJIekCrrA1iQFXjLOj6IPSWta6AjJnBdG\t Vyx/Cpv7/lcxDysOmn0jbbRItpvSpxUmKodaJM6TR/tGtn7ck7W+vel0p17w28yeuq\t 48cMnVhgR1Z8A=="},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha256; c=relaxed/relaxed; d=cjp.org.in; s=k3; t=1737617274; x=1737887274; i=info@cjp.org.in; bh=0xCQNhtumIKsdG1wYyTuu2aY1U6Rj4OgrX0KfM5SIw8=; h=Subject:From:Reply-To:To:Date:Message-ID:X-MC-User:Feedback-ID:\t List-ID:List-Unsubscribe:List-Unsubscribe-Post:Content-Type:\t MIME-Version:CC:Date:Subject:From; b=qf/sn4g/qgj8ZyT6+rHvAQq2jOjLptbYFtlM49IHX0K3ya01qOWNYdwLBMcPYhFrD\t x0KA+A0ulkZnMIyqxcyAjzNyfniGl7p0J4zA2gTIqsK3gUT0ptrMtmHE/vBlBBsdnm\t jezrFG0DKZCy4QIgUCudRJX2J2dWikLCQFAIgW95aordatBPzJAsIiA8lQ+aLG45Oh\t UHhF59VEJIbUyxIF02TzjZ8IxpK1QUSBdnHxwCgxelAgKLpCO5qqryjIuY/j3RHTVL\t tHt3+ytj0OHSRI0d8UbeP4XBmICbmt0NlzEtdvPpqVq45S25tlXVSUZ1eu68LdtNfr\t 1TXIL951hm0Zw=="},{"name":"Received","value":"from localhost (localhost [127.0.0.1]) by mail7.suw231.rsgsv.net (Mailchimp) with ESMTP id 4Ydswp0jckzK6F2KR for <prince.soamedia@gmail.com>; Thu, 23 Jan 2025 07:27:54 +0000 (GMT)"},{"name":"Subject","value":"INVITE | Release of Fact-Finding Report on Police Brutalities in Parbhani"},{"name":"From","value":"CJP India <info@cjp.org.in>"},{"name":"Reply-To","value":"CJP India <info@cjp.org.in>"},{"name":"To","value":"Pradip parmar <prince.soamedia@gmail.com>"},{"name":"Date","value":"Thu, 23 Jan 2025 07:27:49 +0000"},{"name":"Message-ID","value":"<076c0958c5d5470338a5e99f5.d47fb8a352.20250123072735.6369ac1dc2.e3acf677@mail7.suw231.rsgsv.net>"},{"name":"X-Mailer","value":"Mailchimp Mailer - **CID6369ac1dc2d47fb8a352**"},{"name":"X-Campaign","value":"mailchimp076c0958c5d5470338a5e99f5.6369ac1dc2"},{"name":"X-campaignid","value":"mailchimp076c0958c5d5470338a5e99f5.6369ac1dc2"},{"name":"X-Report-Abuse","value":"Please report abuse for this campaign here: https://mailchimp.com/contact/abuse/?u=076c0958c5d5470338a5e99f5&id=6369ac1dc2&e=d47fb8a352"},{"name":"X-MC-User","value":"076c0958c5d5470338a5e99f5"},{"name":"Feedback-ID","value":"91547409:91547409.8291684:us12:mc"},{"name":"List-ID","value":"076c0958c5d5470338a5e99f5mc list <076c0958c5d5470338a5e99f5.429978.list-id.mcsv.net>"},{"name":"X-Accounttype","value":"pr"},{"name":"List-Unsubscribe","value":"<https://cjp.us12.list-manage.com/unsubscribe?u=076c0958c5d5470338a5e99f5&id=88b31c12dd&t=h&e=d47fb8a352&c=6369ac1dc2>, <mailto:unsubscribe-mc.us12_076c0958c5d5470338a5e99f5.6369ac1dc2-d47fb8a352@unsubscribe.mailchimpapp.net?subject=unsubscribe>"},{"name":"List-Unsubscribe-Post","value":"List-Unsubscribe=One-Click"},{"name":"Content-Type","value":"multipart/alternative; boundary=\"_----------=_MCPart_1601732337\""},{"name":"MIME-Version","value":"1.0"}],"mimeType":"multipart/alternative","parts":[{"body":{"data":"VmlldyB0aGlzIGVtYWlsIGluIHlvdXIgYnJvd3NlciAoaHR0cHM6Ly9tYWlsY2hpLm1wL2NqcC9pbnZpdGUtcmVsZWFzZS1vZi1mYWN0LWZpbmRpbmctcmVwb3J0LW9uLXBvbGljZS1icnV0YWxpdGllcy1pbi1wYXJiaGFuaT9lPWQ0N2ZiOGEzNTIpDQpodHRwczovL2NqcC5vcmcuaW4vDQpEZWFyIFByYWRpcCBwYXJtYXIsDQoNCkdyZWV0aW5ncyBmcm9tIENpdGl6ZW5zIGZvciBKdXN0aWNlIGFuZCBQZWFjZSAoaHR0cHM6Ly9janAub3JnLmluLykgKENKUCkhDQoNCldlIHdvdWxkIGxpa2UgdG8gaW52aXRlIHlvdSB0byBhIHNpZ25pZmljYW50IG1lZXRpbmcgZm9yIHRoZSByZWxlYXNlIG9mIHRoZSBQcmVsaW1pbmFyeSBGYWN0LUZpbmRpbmcgUmVwb3J0IG9uIGFsbGVnZWQgYnJ1dGUsIHVubGF3ZnVsLCBhbmQgYW50aS1jb25zdGl0dXRpb25hbCBjb25kdWN0IGJ5IFBhcmJoYW5pIFBvbGljZSBkdXJpbmcgYW5kIGFmdGVyIHRoZSBpbmNpZGVudHMgb2YgRGVjZW1iZXIgMTAtMTUsIDIwMjQuIFRoZSBpbmNpZGVudHMgaGF2ZSBsZWZ0IGEgc2NhciBvbiB0aGUgY29tbXVuaXR5LCB3aXRoIGFjY291bnRzIG9mIGN1c3RvZGlhbCBkZWF0aCwgdW5sYXdmdWwgY29tYmluZyBvcGVyYXRpb25zLCBhbmQgc3lzdGVtYXRpYyB0YXJnZXRpbmcgb2YgRGFsaXQgc2V0dGxlbWVudHMgYnkgbGF3IGVuZm9yY2VtZW50Lg0KDQpEYXRlOiBKYW51YXJ5IDIzLCAyMDI1DQpUaW1lOiA0cG0gb253YXJkcw0KSm9pbiB0aGUgWW91dHViZSBMaXZlIEAgaHR0cHM6Ly93d3cueW91dHViZS5jb20vY2pwaW5kaWENCg0KDQpJbmNpZGVudCBCYWNrZ3JvdW5kDQpBIHByb3Rlc3Qgd2FzIHNwYXJrZWQgYnkgdGhlIGRlc2VjcmF0aW9uIG9mIGEgQ29uc3RpdHV0aW9uIHJlcGxpY2EgaW4gZnJvbnQgb2YgRHIuIEIuUi4gQW1iZWRrYXIncyBzdGF0dWUuIER1cmluZyBhIGJhbmRoIGNhbGxlZCBieSB0aGUgRGFsaXQgb3JnYW5pc2F0aW9ucyB0byBjb25kZW1uIHRoZSBkZXNlY3JhdGlvbiBpbmNpZGVudCwgdGhlIHBlcnBldHJhdG9yIG9mIHdoaWNoIGhhZCBiZWVuIGRlZW1lZCBhcyDigJxsdW5hdGlj4oCdIGJ5IHRoZSBwb2xpY2UgYmVmb3JlIGhpcyBhcnJlc3QsIGNlcnRhaW4gb3V0c2lkZSBlbGVtZW50cyBjYW1lIGFuZCBpbmR1bGdlZCBpbiB2aW9sZW5jZS4gVGhlIHBvbGljZSwgd2hpY2ggbGV0IHRoZSB1bnJ1bHkgY3Jvd2QgcnVuIGFtb2sgZm9yIGFsbW9zdCBvbmUgaG91ciwgd2VhcG9uaXNlZCB0aGlzIGluY2lkZW50IHRvIHRhcmdldCBEYWxpdCBjb2xvbmllcyBieSBjb25kdWN0aW5nIGNvbWJpbmcgb3BlcmF0aW9ucywgdXNpbmcgYnJ1dGUgZm9yY2UgYW5kIGluZHVsZ2UgaW4gdmlvbGVuY2UuDQoNCkZhY3QtRmluZGluZyBUZWFtOiBUaGUgRmFjdC1GaW5kaW5nIFRlYW0sIGxlZCBieSBBZHYuIEFiaGF5IFRha3NhbCAoQ1BJKSwgQWR2LiBQYXdhbiBKb25kaGFsZSwgU3VkaGlyIFNhbHZlLCBDb21yYWRlIFZpa2FzIEdhaWt3YWQsIENvbXJhZGUgUHJpdGFtIEdoYWdhdmUsIGFuZCBSYWh1bCBQcmFkaGFuLCBjb25kdWN0ZWQgaW50ZXJ2aWV3cyB3aXRoIHZpY3RpbXMsIGV5ZXdpdG5lc3NlcywgYW5kIGF1dGhvcml0aWVzIGluIFBhcmJoYW5pLiBUaGVpciB3b3JrIHdhcyBndWlkZWQgYnkgc2VuaW9yIGh1bWFuIHJpZ2h0cyBhY3RpdmlzdCBUZWVzdGEgU2V0YWx2YWQgKFNlY3JldGFyeSwgQ2l0aXplbnMgZm9yIEp1c3RpY2UgJiBQZWFjZSkgYW5kIHNlbmlvciBqb3VybmFsaXN0IGFuZCBwb2V0IFJhanUgUGFydWxla2FyLg0KDQpodHRwczovL3d3dy55b3V0dWJlLmNvbS9janBpbmRpYQ0KRm9yIGZ1cnRoZXIgaW5mb3JtYXRpb24sIHdyaXRlIHRvIHVzIGF0IGluZm9AY2pwLm9yZy5pbiAobWFpbHRvOmluZm9AY2pwLm9yZy5pbikNCg0KV2FybSByZWdhcmRzLA0KVGVhbSBDSlANCg0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoqKiBZb3VUdWJlIChodHRwOi8vd3d3LnlvdXR1YmUuY29tL2NqcGluZGlhKQ0KKiogVHdpdHRlciAoaHR0cDovL3d3dy50d2l0dGVyLmNvbS9janBpbmRpYSkNCioqIEZhY2Vib29rIChodHRwOi8vd3d3LmZhY2Vib29rLmNvbS9janBpbmRpYSkNCioqIFdlYnNpdGUgKGh0dHBzOi8vY2pwLm9yZy5pbi8pDQoqKiBJbnN0YWdyYW0gKGh0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vY2pwaW5kaWEvKQ0KQ29weXJpZ2h0IMKpIDIwMjUgQ2l0aXplbnMgZm9yIEp1c3RpY2UgYW5kIFBlYWNlLCBBbGwgcmlnaHRzIHJlc2VydmVkLg0KIFlvdSBhcmUgcmVjZWl2aW5nIHRoaXMgZW1haWwgYmVjYXVzZSB5b3UgaGF2ZSBiZWVuIGFuIGludmFsdWFibGUgc3VwcG9ydGVyIG9mIENKUCBhbmQgb3VyIHdvcmsuDQoNCk91ciBtYWlsaW5nIGFkZHJlc3MgaXM6DQpDaXRpemVucyBmb3IgSnVzdGljZSBhbmQgUGVhY2UNCk5pcmFudCwgSnVodSBUYXJhDQpSb2FkIEp1aHUsIFNhbnRhY3J1eiAoV2VzdA0KTXVtYmFpLCAgNDAwMDQ5DQpJbmRpYQ0KV2FudCB0byBjaGFuZ2UgaG93IHlvdSByZWNlaXZlIHRoZXNlIGVtYWlscz8NCllvdSBjYW4NCioqIHVwZGF0ZSB5b3VyIHByZWZlcmVuY2VzIChodHRwczovL2NqcC51czEyLmxpc3QtbWFuYWdlLmNvbS9wcm9maWxlP3U9MDc2YzA5NThjNWQ1NDcwMzM4YTVlOTlmNSZpZD04OGIzMWMxMmRkJmU9ZDQ3ZmI4YTM1MiZjPTYzNjlhYzFkYzIpDQpvciAqKiB1bnN1YnNjcmliZSBmcm9tIHRoaXMgbGlzdCAoaHR0cHM6Ly9janAudXMxMi5saXN0LW1hbmFnZS5jb20vdW5zdWJzY3JpYmU_dT0wNzZjMDk1OGM1ZDU0NzAzMzhhNWU5OWY1JmlkPTg4YjMxYzEyZGQmdD1iJmU9ZDQ3ZmI4YTM1MiZjPTYzNjlhYzFkYzIpDQou","size":2850},"headers":[{"name":"Content-Type","value":"text/plain; charset=\"utf-8\"; format=\"fixed\""},{"name":"Content-Transfer-Encoding","value":"quoted-printable"}],"mimeType":"text/plain","partId":"0"},{"body":{"data":"","size":58285},"headers":[{"name":"Content-Type","value":"text/html; charset=\"utf-8\""},{"name":"Content-Transfer-Encoding","value":"quoted-printable"}],"mimeType":"text/html","partId":"1"}]},"sizeEstimate":73361,"snippet":"Join us online for the release of the preliminary report View this email in your browser Dear Pradip parmar, Greetings from Citizens for Justice and Peace (CJP)! We would like to invite you to a","threadId":"194920f75e50523d"}`
	err := json.Unmarshal([]byte(data), &message)
	if err != nil {
		t.Errorf("createRawMessage() error = %v", err)
		return
	}

	got, err := createRawMessage(&message)
	if err != nil {
		t.Errorf("createRawMessage() error = %v", err)
		return
	}

	fmt.Println(got)
}
